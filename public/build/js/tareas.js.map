{"version":3,"sources":["tareas.js"],"names":["async","url","obtenerProyecto","respuesta","fetch","resultado","json","tareas","mostrarTareas","error","console","log","obtenerTareas","listadoTareas","document","querySelector","firstChild","removeChild","limpiarTareas","listaTareas","length","textoNoTareas","createElement","textContent","classList","add","appendChild","estados","0","1","forEach","tarea","id","nombre","estado","contenedorTarea","dataset","tareaId","nombreTarea","ondblclick","mostrarFormulario","opcionesDiv","btnEstado","toLowerCase","estadoTarea","nuevoEstado","actualizarTarea","cambiarEstadoTarea","btnEliminar","idTarea","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","datos","FormData","append","method","body","tipo","position","showConfirmButton","timer","filter","tareaMemoria","eliminarTarea","confirmarEliminarTarea","editar","modal","innerHTML","setTimeout","addEventListener","e","preventDefault","target","contains","remove","value","trim","mostrarAlerta","mensaje","tareaObj","String","proyectoId","agregarTarea","elemento","alertaPrevia","alerta","parentElement","insertBefore","nextElementSibling","map","proyectoEntries","URLSearchParams","window","location","search","Object","fromEntries","entries","token"],"mappings":"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","file":"tareas.js","sourcesContent":["//Para proteger las variables y no se puedan usar en otro arhivo .js\r\n(function() {\r\n\r\n    obtenerTareas();\r\n    let tareas = [];\r\n\r\n    const nuevaTarea = document.querySelector('#agregar-tarea');\r\n    nuevaTarea.addEventListener('click', () => {\r\n        mostrarFormulario();\r\n    });\r\n\r\n    async function obtenerTareas() {\r\n        try {\r\n            const token = obtenerProyecto();\r\n            const url = `/api/tareas?token=${token}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            \r\n            tareas = resultado;\r\n            mostrarTareas();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    function mostrarTareas() {\r\n        limpiarTareas();\r\n        \r\n        const listaTareas = document.querySelector('#listado-tareas');\r\n\r\n        if (tareas.length === 0) {\r\n            const textoNoTareas = document.createElement('li');\r\n            textoNoTareas.textContent = 'No hay tareas';\r\n            textoNoTareas.classList.add('no-tareas');\r\n            listaTareas.appendChild(textoNoTareas);\r\n            return;\r\n        }\r\n\r\n        const estados = {\r\n            '0': 'Pendiente',\r\n            '1': 'Completo'\r\n        }\r\n\r\n        tareas.forEach(tarea => {\r\n            const {id, nombre, estado} = tarea;\r\n\r\n            const contenedorTarea = document.createElement('li');\r\n            contenedorTarea.dataset.tareaId = id;\r\n            contenedorTarea.classList.add('tarea');\r\n            \r\n            const nombreTarea = document.createElement('p');\r\n            nombreTarea.textContent = nombre;\r\n            nombreTarea.ondblclick = () => {\r\n                //Editar el nombre de la tarea\r\n                mostrarFormulario(true, {...tarea});\r\n            }\r\n\r\n            const opcionesDiv = document.createElement('div');\r\n            opcionesDiv.classList.add('opciones');\r\n\r\n            const btnEstado = document.createElement('button');\r\n            btnEstado.classList.add('estado-tarea', `${estados[estado].toLowerCase()}`);\r\n            btnEstado.textContent = estados[estado]\r\n            btnEstado.dataset.estadoTarea = estado;\r\n            //Evento de doble click\r\n            btnEstado.ondblclick = () => {\r\n                cambiarEstadoTarea({...tarea});\r\n            }\r\n\r\n            const btnEliminar = document.createElement('button');\r\n            btnEliminar.classList.add('eliminar-tarea');\r\n            btnEliminar.dataset.idTarea= id;\r\n            btnEliminar.textContent = 'Eliminar';\r\n            btnEliminar.ondblclick = () => {\r\n                confirmarEliminarTarea({...tarea});\r\n            }\r\n\r\n            opcionesDiv.appendChild(btnEstado);\r\n            opcionesDiv.appendChild(btnEliminar);\r\n\r\n            contenedorTarea.appendChild(nombreTarea);\r\n            contenedorTarea.appendChild(opcionesDiv);\r\n            \r\n            listaTareas.appendChild(contenedorTarea);\r\n        });\r\n    }\r\n\r\n    function mostrarFormulario(editar = false, tarea = {}) {\r\n        const {id, nombre } = tarea;\r\n\r\n        const modal = document.createElement('div');\r\n        modal.classList.add('modal');\r\n        modal.innerHTML = `\r\n            <form class='formulario nueva-tarea'>\r\n                <legend>${ editar? 'Editar Tarea' : 'AÃ±ade una nueva tarea' }</legend>\r\n                <div class='campo'>\r\n                    <label for='tarea'>Tarea</label>\r\n                    <input type='text' name='tarea' id='tarea' placeholder='${ nombre ? 'Editar la Tarea' : 'Escribe la Tarea'}' value='${ nombre ? nombre : ''}'>\r\n                </div>\r\n\r\n                <div class='opciones'>\r\n                    <input type='submit' class='submit-nueva-tarea' value='${ editar? 'Actualizar Tarea' : 'Crear Tarea' }'>\r\n                    <button type='button' class='cerrar-modal'>Cancelar</button>\r\n                </div>\r\n            </form>\r\n        `;\r\n\r\n        setTimeout(() => {\r\n            const formulario = document.querySelector('.formulario');\r\n            formulario.classList.add('animar');\r\n        }, 0);\r\n\r\n        document.querySelector('body').appendChild(modal);\r\n\r\n        modal.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n\r\n            if (e.target.classList.contains('cerrar-modal')) {\r\n                const formulario = document.querySelector('.formulario');\r\n                formulario.classList.add('cerrar');\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 500);\r\n            }\r\n\r\n            if (e.target.classList.contains('submit-nueva-tarea')) {\r\n                const nombreTarea = document.querySelector('#tarea').value.trim();\r\n\r\n                if (nombreTarea === '') {\r\n                    //Mostrar Alerta de Error\r\n                    mostrarAlerta('El nombre de la tarea es obligatorio', 'error', document.querySelector('.formulario legend'));\r\n                    return;\r\n                }\r\n                \r\n                if (editar) {\r\n                    tarea.nombre = nombreTarea;\r\n                    actualizarTarea(tarea);\r\n                    return;\r\n                }\r\n\r\n                agregarTarea(nombreTarea);\r\n            }\r\n        });\r\n    }\r\n\r\n    function mostrarAlerta(mensaje, tipo, elemento) {\r\n        const alertaPrevia = document.querySelector('.alertas');\r\n        if (alertaPrevia) {\r\n            alertaPrevia.remove();\r\n        }\r\n\r\n        const alerta = document.createElement('div');\r\n        alerta.classList.add('alertas', tipo);\r\n        alerta.textContent = mensaje;\r\n\r\n        //Inserta la alerta antes del div\"CAMPO\"\r\n        elemento.parentElement.insertBefore(alerta, elemento.nextElementSibling);\r\n\r\n        setTimeout(() => {\r\n            alerta.remove();\r\n        }, 2000);\r\n    }\r\n\r\n    function cambiarEstadoTarea(tarea) {\r\n        const nuevoEstado = tarea.estado === \"1\" ? \"0\": \"1\";\r\n        tarea.estado = nuevoEstado;\r\n        actualizarTarea(tarea);\r\n    }\r\n\r\n    function confirmarEliminarTarea(tarea) {\r\n        Swal.fire({\r\n            title: 'Eliminar Tarea?',\r\n            text: \"Se eliminarÃ¡ la tarea por completo!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, Eliminar!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                eliminarTarea(tarea);\r\n            }\r\n        });\r\n    }\r\n\r\n    async function eliminarTarea(tarea) {\r\n        const {estado, id, nombre} = tarea;\r\n\r\n        const datos = new FormData();\r\n        datos.append('id', id);\r\n        datos.append('nombre', nombre);\r\n        datos.append('estado', estado);\r\n        datos.append('proyectoId', obtenerProyecto());\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea/eliminar';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json();\r\n\r\n            if (resultado.tipo === 'exito') {\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    icon: 'success',\r\n                    title: 'Eliminado',\r\n                    showConfirmButton: false,\r\n                    timer: 1000\r\n                })\r\n                tareas = tareas.filter(tareaMemoria => tareaMemoria.id !== id );\r\n                mostrarTareas();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async function actualizarTarea(tarea) {\r\n        const {estado, id, nombre} = tarea;\r\n\r\n        const datos = new FormData();\r\n        datos.append('id', id);\r\n        datos.append('nombre', nombre);\r\n        datos.append('estado', estado);\r\n        datos.append('proyectoId', obtenerProyecto());\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea/actualizar';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json();\r\n\r\n            if (resultado.tipo === 'exito') {\r\n                const modal = document.querySelector('.modal');\r\n                if (modal) modal.remove();\r\n\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    icon: 'success',\r\n                    title: 'Actualizado Correctamente',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                });\r\n\r\n                tareas = tareas.map(tareaMemoria => {\r\n                    if (tareaMemoria.id === id) {\r\n                        tareaMemoria.estado = estado;\r\n                        tareaMemoria.nombre = nombre;\r\n                    }\r\n                    return tareaMemoria;\r\n                });\r\n\r\n                mostrarTareas();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async function agregarTarea(tarea) {\r\n        const datos = new FormData();\r\n        datos.append('nombre', tarea);\r\n        datos.append('proyectoId', obtenerProyecto());\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json();\r\n\r\n            //Mostrar Alerta de Exito\r\n            mostrarAlerta(resultado.mensaje, resultado.tipo, document.querySelector('.formulario legend'));\r\n\r\n            if (resultado.tipo === 'exito') {\r\n                const modal = document.querySelector('.modal');\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 2000);\r\n\r\n                //Agregar el objeto de tarea al global de tareas\r\n                const tareaObj = {\r\n                    id: String(resultado.id),\r\n                    nombre: tarea,\r\n                    estado : \"0\",\r\n                    proyectoId: resultado.proyectoId\r\n                }\r\n\r\n                tareas = [...tareas, tareaObj];\r\n                mostrarTareas();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    function obtenerProyecto() {\r\n        const proyectoEntries = new URLSearchParams(window.location.search);\r\n        const proyecto = Object.fromEntries(proyectoEntries.entries());\r\n        return proyecto.token;\r\n    }\r\n\r\n    function limpiarTareas() {\r\n        const listadoTareas = document.querySelector('#listado-tareas');\r\n        while (listadoTareas.firstChild) {\r\n            listadoTareas.removeChild(listadoTareas.firstChild)\r\n        }\r\n    }\r\n})();"]}