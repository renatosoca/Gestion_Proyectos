{"version":3,"sources":["tareas.js"],"names":["async","url","obtenerProyecto","respuesta","fetch","resultado","json","tareas","mostrarTareas","error","console","log","obtenerTareas","filtradas","document","querySelector","addEventListener","mostrarFormulario","listadoTareas","firstChild","removeChild","limpiarTareas","totalPendientes","filter","tarea","estado","PendientesRadio","length","disabled","totalCompletas","completasRadio","arrayTareas","listaTareas","textoNoTareas","createElement","textContent","classList","add","appendChild","estados","0","1","forEach","id","nombre","contenedorTarea","dataset","tareaId","nombreTarea","ondblclick","opcionesDiv","btnEstado","toLowerCase","estadoTarea","nuevoEstado","actualizarTarea","cambiarEstadoTarea","btnEliminar","idTarea","Swal","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","datos","FormData","append","method","body","tipo","position","showConfirmButton","timer","tareaMemoria","eliminarTarea","confirmarEliminarTarea","editar","modal","innerHTML","setTimeout","e","preventDefault","target","contains","remove","value","trim","mostrarAlerta","mensaje","tareaObj","String","proyectoId","agregarTarea","elemento","alertaPrevia","alerta","parentElement","insertBefore","nextElementSibling","map","proyectoEntries","URLSearchParams","window","location","search","Object","fromEntries","entries","token","querySelectorAll","radio","filtro"],"mappings":"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","file":"tareas.js","sourcesContent":["//Para proteger las variables y no se puedan usar en otro arhivo .js\r\n(function() {\r\n\r\n    obtenerTareas();\r\n    let tareas = [];\r\n    let filtradas = [];\r\n\r\n    const nuevaTarea = document.querySelector('#agregar-tarea');\r\n    nuevaTarea.addEventListener('click', () => {\r\n        mostrarFormulario();\r\n    });\r\n\r\n    //Para los filtros\r\n    const filtros = document.querySelectorAll('#filtros input[type=\"radio\"');\r\n    filtros.forEach( radio => {\r\n        radio.addEventListener('input', (e) => {\r\n            const filtro = e.target.value;\r\n\r\n            if (filtro === '') {\r\n                filtradas = [];\r\n                mostrarTareas();\r\n                return;\r\n            }\r\n\r\n            filtradas = tareas.filter( tarea => tarea.estado === filtro);\r\n            mostrarTareas();\r\n        })\r\n    })\r\n\r\n    async function obtenerTareas() {\r\n        try {\r\n            const token = obtenerProyecto();\r\n            const url = `/api/tareas?token=${token}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            \r\n            tareas = resultado;\r\n            mostrarTareas();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    function mostrarTareas() {\r\n        limpiarTareas();\r\n        totalPendientes();\r\n        totalCompletas();\r\n\r\n        const arrayTareas = filtradas.length ? filtradas : tareas;\r\n        \r\n        const listaTareas = document.querySelector('#listado-tareas');\r\n\r\n        if (arrayTareas.length === 0) {\r\n            const textoNoTareas = document.createElement('li');\r\n            textoNoTareas.textContent = 'No hay tareas';\r\n            textoNoTareas.classList.add('no-tareas');\r\n            listaTareas.appendChild(textoNoTareas);\r\n            return;\r\n        }\r\n\r\n        const estados = {\r\n            '0': 'Pendiente',\r\n            '1': 'Completo'\r\n        }\r\n\r\n        arrayTareas.forEach( tarea => {\r\n            const {id, nombre, estado} = tarea;\r\n\r\n            const contenedorTarea = document.createElement('li');\r\n            contenedorTarea.dataset.tareaId = id;\r\n            contenedorTarea.classList.add('tarea');\r\n            \r\n            const nombreTarea = document.createElement('p');\r\n            nombreTarea.textContent = nombre;\r\n            nombreTarea.ondblclick = () => {\r\n                //Editar el nombre de la tarea\r\n                mostrarFormulario(true, {...tarea});\r\n            }\r\n\r\n            const opcionesDiv = document.createElement('div');\r\n            opcionesDiv.classList.add('opciones');\r\n\r\n            const btnEstado = document.createElement('button');\r\n            btnEstado.classList.add('estado-tarea', `${estados[estado].toLowerCase()}`);\r\n            btnEstado.textContent = estados[estado]\r\n            btnEstado.dataset.estadoTarea = estado;\r\n            //Evento de doble click\r\n            btnEstado.ondblclick = () => {\r\n                cambiarEstadoTarea({...tarea});\r\n            }\r\n\r\n            const btnEliminar = document.createElement('button');\r\n            btnEliminar.classList.add('eliminar-tarea');\r\n            btnEliminar.dataset.idTarea= id;\r\n            btnEliminar.textContent = 'Eliminar';\r\n            btnEliminar.ondblclick = () => {\r\n                confirmarEliminarTarea({...tarea});\r\n            }\r\n\r\n            opcionesDiv.appendChild(btnEstado);\r\n            opcionesDiv.appendChild(btnEliminar);\r\n\r\n            contenedorTarea.appendChild(nombreTarea);\r\n            contenedorTarea.appendChild(opcionesDiv);\r\n            \r\n            listaTareas.appendChild(contenedorTarea);\r\n        });\r\n    }\r\n\r\n    function totalPendientes() {\r\n        const totalPendientes = tareas.filter(tarea => tarea.estado === '0');\r\n        const PendientesRadio = document.querySelector('#pendiente');\r\n\r\n        if (totalPendientes.length === 0) {\r\n            PendientesRadio.disabled = true;\r\n            return;\r\n        }\r\n\r\n        PendientesRadio.disabled = false;\r\n    }\r\n\r\n    function totalCompletas() {\r\n        const totalCompletas = tareas.filter(tarea => tarea.estado === '1');\r\n        const completasRadio = document.querySelector('#completas');\r\n\r\n        if (totalCompletas.length === 0) {\r\n            completasRadio.disabled = true;\r\n            return;\r\n        }\r\n\r\n        completasRadio.disabled = false;\r\n    }\r\n\r\n    function mostrarFormulario(editar = false, tarea = {}) {\r\n        const {id, nombre } = tarea;\r\n\r\n        const modal = document.createElement('div');\r\n        modal.classList.add('modal');\r\n        modal.innerHTML = `\r\n            <form class='formulario nueva-tarea'>\r\n                <legend>${ editar? 'Editar Tarea' : 'Añade una nueva tarea' }</legend>\r\n                <div class='campo'>\r\n                    <label for='tarea'>Tarea</label>\r\n                    <input type='text' name='tarea' id='tarea' placeholder='${ nombre ? 'Editar la Tarea' : 'Escribe la Tarea'}' value='${ nombre ? nombre : ''}'>\r\n                </div>\r\n\r\n                <div class='opciones'>\r\n                    <input type='submit' class='submit-nueva-tarea' value='${ editar? 'Actualizar Tarea' : 'Crear Tarea' }'>\r\n                    <button type='button' class='cerrar-modal'>Cancelar</button>\r\n                </div>\r\n            </form>\r\n        `;\r\n\r\n        setTimeout(() => {\r\n            const formulario = document.querySelector('.formulario');\r\n            formulario.classList.add('animar');\r\n        }, 0);\r\n\r\n        document.querySelector('body').appendChild(modal);\r\n\r\n        modal.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n\r\n            if (e.target.classList.contains('cerrar-modal')) {\r\n                const formulario = document.querySelector('.formulario');\r\n                formulario.classList.add('cerrar');\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 500);\r\n            }\r\n\r\n            if (e.target.classList.contains('submit-nueva-tarea')) {\r\n                const nombreTarea = document.querySelector('#tarea').value.trim();\r\n\r\n                if (nombreTarea === '') {\r\n                    //Mostrar Alerta de Error\r\n                    mostrarAlerta('El nombre de la tarea es obligatorio', 'error', document.querySelector('.formulario legend'));\r\n                    return;\r\n                }\r\n                \r\n                if (editar) {\r\n                    tarea.nombre = nombreTarea;\r\n                    actualizarTarea(tarea);\r\n                    return;\r\n                }\r\n\r\n                agregarTarea(nombreTarea);\r\n            }\r\n        });\r\n    }\r\n\r\n    function mostrarAlerta(mensaje, tipo, elemento) {\r\n        const alertaPrevia = document.querySelector('.alertas');\r\n        if (alertaPrevia) {\r\n            alertaPrevia.remove();\r\n        }\r\n\r\n        const alerta = document.createElement('div');\r\n        alerta.classList.add('alertas', tipo);\r\n        alerta.textContent = mensaje;\r\n\r\n        //Inserta la alerta antes del div\"CAMPO\"\r\n        elemento.parentElement.insertBefore(alerta, elemento.nextElementSibling);\r\n\r\n        setTimeout(() => {\r\n            alerta.remove();\r\n        }, 2000);\r\n    }\r\n\r\n    function cambiarEstadoTarea(tarea) {\r\n        const nuevoEstado = tarea.estado === \"1\" ? \"0\": \"1\";\r\n        tarea.estado = nuevoEstado;\r\n        actualizarTarea(tarea);\r\n    }\r\n\r\n    function confirmarEliminarTarea(tarea) {\r\n        Swal.fire({\r\n            title: 'Eliminar Tarea?',\r\n            text: \"Se eliminará la tarea por completo!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Si, Eliminar!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                eliminarTarea(tarea);\r\n            }\r\n        });\r\n    }\r\n\r\n    async function eliminarTarea(tarea) {\r\n        const {estado, id, nombre} = tarea;\r\n\r\n        const datos = new FormData();\r\n        datos.append('id', id);\r\n        datos.append('nombre', nombre);\r\n        datos.append('estado', estado);\r\n        datos.append('proyectoId', obtenerProyecto());\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea/eliminar';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json();\r\n\r\n            if (resultado.tipo === 'exito') {\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    icon: 'success',\r\n                    title: 'Eliminado',\r\n                    showConfirmButton: false,\r\n                    timer: 1000\r\n                })\r\n                tareas = tareas.filter(tareaMemoria => tareaMemoria.id !== id );\r\n                mostrarTareas();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async function actualizarTarea(tarea) {\r\n        const {estado, id, nombre} = tarea;\r\n\r\n        const datos = new FormData();\r\n        datos.append('id', id);\r\n        datos.append('nombre', nombre);\r\n        datos.append('estado', estado);\r\n        datos.append('proyectoId', obtenerProyecto());\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea/actualizar';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json();\r\n\r\n            if (resultado.tipo === 'exito') {\r\n                const modal = document.querySelector('.modal');\r\n                if (modal) modal.remove();\r\n\r\n                Swal.fire({\r\n                    position: 'top-end',\r\n                    icon: 'success',\r\n                    title: 'Actualizado Correctamente',\r\n                    showConfirmButton: false,\r\n                    timer: 1500\r\n                });\r\n\r\n                tareas = tareas.map(tareaMemoria => {\r\n                    if (tareaMemoria.id === id) {\r\n                        tareaMemoria.estado = estado;\r\n                        tareaMemoria.nombre = nombre;\r\n                    }\r\n                    return tareaMemoria;\r\n                });\r\n\r\n                mostrarTareas();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    async function agregarTarea(tarea) {\r\n        const datos = new FormData();\r\n        datos.append('nombre', tarea);\r\n        datos.append('proyectoId', obtenerProyecto());\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json();\r\n\r\n            //Mostrar Alerta de Exito\r\n            mostrarAlerta(resultado.mensaje, resultado.tipo, document.querySelector('.formulario legend'));\r\n\r\n            if (resultado.tipo === 'exito') {\r\n                const modal = document.querySelector('.modal');\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 2000);\r\n\r\n                //Agregar el objeto de tarea al global de tareas\r\n                const tareaObj = {\r\n                    id: String(resultado.id),\r\n                    nombre: tarea,\r\n                    estado : \"0\",\r\n                    proyectoId: resultado.proyectoId\r\n                }\r\n\r\n                tareas = [...tareas, tareaObj];\r\n                mostrarTareas();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    function obtenerProyecto() {\r\n        const proyectoEntries = new URLSearchParams(window.location.search);\r\n        const proyecto = Object.fromEntries(proyectoEntries.entries());\r\n        return proyecto.token;\r\n    }\r\n\r\n    function limpiarTareas() {\r\n        const listadoTareas = document.querySelector('#listado-tareas');\r\n        while (listadoTareas.firstChild) {\r\n            listadoTareas.removeChild(listadoTareas.firstChild)\r\n        }\r\n    }\r\n})();"]}