{"version":3,"sources":["tareas.js"],"names":["async","url","obtenerProyecto","respuesta","fetch","resultado","json","tareas","mostrarTareas","error","console","log","obtenerTareas","listadoTareas","document","querySelector","firstChild","removeChild","limpiarTareas","listaTareas","length","textoNoTareas","createElement","textContent","classList","add","appendChild","estados","0","1","forEach","tarea","id","nombre","estado","proyectoId","contenedorTarea","dataset","tareaId","nombreTarea","opcionesDiv","btnEstado","toLowerCase","estadoTarea","ondblclick","nuevoEstado","datos","FormData","append","method","body","actualizarTarea","cambiarEstadoTarea","btnEliminar","idTarea","mostrarAlerta","mensaje","tipo","elemento","alertaPrevia","remove","alerta","parentElement","insertBefore","nextElementSibling","setTimeout","proyectoEntries","URLSearchParams","window","location","search","Object","fromEntries","entries","token","addEventListener","modal","innerHTML","e","preventDefault","target","contains","value","trim","tareaObj","String","agregarTarea","EnviarNuevaTarea"],"mappings":"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","file":"tareas.js","sourcesContent":["//Para proteger las variables y no se puedan usar en otro arhivo .js\r\n(function() {\r\n\r\n    obtenerTareas();\r\n    let tareas = [];\r\n\r\n    const nuevaTarea = document.querySelector('#agregar-tarea');\r\n    nuevaTarea.addEventListener('click', mostrarFormulario);\r\n\r\n    async function obtenerTareas() {\r\n        try {\r\n            const token = obtenerProyecto();\r\n            const url = `/api/tareas?token=${token}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            \r\n            tareas = resultado;\r\n            mostrarTareas();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    function mostrarTareas() {\r\n        limpiarTareas();\r\n        \r\n        const listaTareas = document.querySelector('#listado-tareas');\r\n\r\n        if (tareas.length === 0) {\r\n            const textoNoTareas = document.createElement('li');\r\n            textoNoTareas.textContent = 'No hay tareas';\r\n            textoNoTareas.classList.add('no-tareas');\r\n            listaTareas.appendChild(textoNoTareas);\r\n            return;\r\n        }\r\n\r\n        const estados = {\r\n            '0': 'Pendiente',\r\n            '1': 'Completo'\r\n        }\r\n\r\n        tareas.forEach(tarea => {\r\n            const {id, nombre, estado, proyectoId} = tarea;\r\n\r\n            const contenedorTarea = document.createElement('li');\r\n            contenedorTarea.dataset.tareaId = id;\r\n            contenedorTarea.classList.add('tarea');\r\n            \r\n            const nombreTarea = document.createElement('p');\r\n            nombreTarea.textContent = nombre;\r\n\r\n            const opcionesDiv = document.createElement('div');\r\n            opcionesDiv.classList.add('opciones');\r\n\r\n            const btnEstado = document.createElement('button');\r\n            btnEstado.classList.add('estado-tarea', `${estados[estado].toLowerCase()}`);\r\n            btnEstado.textContent = estados[estado]\r\n            btnEstado.dataset.estadoTarea = estado;\r\n            //Evento de doble click\r\n            btnEstado.ondblclick = () => {\r\n                cambiarEstadoTarea({...tarea});\r\n            }\r\n\r\n            const btnEliminar = document.createElement('button');\r\n            btnEliminar.classList.add('eliminar-tarea');\r\n            btnEliminar.dataset.idTarea= id;\r\n            btnEliminar.textContent = 'Eliminar';\r\n\r\n            opcionesDiv.appendChild(btnEstado);\r\n            opcionesDiv.appendChild(btnEliminar);\r\n\r\n            contenedorTarea.appendChild(nombreTarea);\r\n            contenedorTarea.appendChild(opcionesDiv);\r\n            \r\n            listaTareas.appendChild(contenedorTarea);\r\n        });\r\n    }\r\n\r\n    function mostrarFormulario() {\r\n        const modal = document.createElement('div');\r\n        modal.classList.add('modal');\r\n        modal.innerHTML = `\r\n            <form class='formulario nueva-tarea'>\r\n                <legend>Añade una nueva tarea</legend>\r\n                <div class='campo'>\r\n                    <label for='tarea'>Tarea</label>\r\n                    <input type='text' name='tarea' id='tarea' placeholder='Escribe Tu Tarea'>\r\n                </div>\r\n\r\n                <div class='opciones'>\r\n                    <input type='submit' class='submit-nueva-tarea' value='Añadir Tarea'>\r\n                    <button type='button' class='cerrar-modal'>Cancelar</button>\r\n                </div>\r\n            </form>\r\n        `;\r\n\r\n        setTimeout(() => {\r\n            const formulario = document.querySelector('.formulario');\r\n            formulario.classList.add('animar');\r\n        }, 0);\r\n\r\n        document.querySelector('body').appendChild(modal);\r\n\r\n        modal.addEventListener('click', (e) => {\r\n            e.preventDefault();\r\n\r\n            if (e.target.classList.contains('cerrar-modal')) {\r\n                const formulario = document.querySelector('.formulario');\r\n                formulario.classList.add('cerrar');\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 500);\r\n            }\r\n\r\n            if (e.target.classList.contains('submit-nueva-tarea')) {\r\n                EnviarNuevaTarea();\r\n            }\r\n        });\r\n    }\r\n\r\n    function EnviarNuevaTarea() {\r\n        const tarea = document.querySelector('#tarea').value.trim();\r\n        if (tarea === '') {\r\n            //Mostrar Alerta\r\n            mostrarAlerta('El nombre de la tarea es obligatorio', 'error', document.querySelector('.formulario legend'));\r\n            return;\r\n        }\r\n\r\n        agregarTarea(tarea);\r\n    }\r\n\r\n    function mostrarAlerta(mensaje, tipo, elemento) {\r\n        const alertaPrevia = document.querySelector('.alertas');\r\n        if (alertaPrevia) {\r\n            alertaPrevia.remove();\r\n        }\r\n\r\n        const alerta = document.createElement('div');\r\n        alerta.classList.add('alertas', tipo);\r\n        alerta.textContent = mensaje;\r\n\r\n        //Inserta la alerta antes del div\"CAMPO\"\r\n        elemento.parentElement.insertBefore(alerta, elemento.nextElementSibling);\r\n\r\n        setTimeout(() => {\r\n            alerta.remove();\r\n        }, 2000);\r\n    }\r\n\r\n    function cambiarEstadoTarea(tarea) {\r\n        const nuevoEstado = tarea.estado === \"1\" ? \"0\": \"1\";\r\n        tarea.estado = nuevoEstado;\r\n        actualizarTarea(tarea);\r\n    }\r\n\r\n    async function actualizarTarea(tarea) {\r\n        const {estado, id, nombre, proyectoId} = tarea;\r\n\r\n        const datos = new FormData();\r\n        datos.append('id', id);\r\n        datos.append('nombre', nombre);\r\n        datos.append('estado', estado);\r\n        datos.append('proyectoId', obtenerProyecto());\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea/actualizar';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json();\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    //Consultar el Servidor para añadir una nueva tarea\r\n    async function agregarTarea(tarea) {\r\n        const datos = new FormData();\r\n        datos.append('nombre', tarea);\r\n        datos.append('proyectoId', obtenerProyecto());\r\n\r\n        try {\r\n            const url = 'http://localhost:3000/api/tarea';\r\n            const respuesta = await fetch(url, {\r\n                method: 'POST',\r\n                body: datos\r\n            });\r\n\r\n            const resultado = await respuesta.json();\r\n\r\n            //Mostrar Alerta de Exito\r\n            mostrarAlerta(resultado.mensaje, resultado.tipo, document.querySelector('.formulario legend'));\r\n\r\n            if (resultado.tipo === 'exito') {\r\n                const modal = document.querySelector('.modal');\r\n                setTimeout(() => {\r\n                    modal.remove();\r\n                }, 2000);\r\n\r\n                //Agregar el objeto de tarea al global de tareas\r\n                const tareaObj = {\r\n                    id: String(resultado.id),\r\n                    nombre: tarea,\r\n                    estado : \"0\",\r\n                    proyectoId: resultado.proyectoId\r\n                }\r\n\r\n                tareas = [...tareas, tareaObj];\r\n                mostrarTareas();\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    function obtenerProyecto() {\r\n        const proyectoEntries = new URLSearchParams(window.location.search);\r\n        const proyecto = Object.fromEntries(proyectoEntries.entries());\r\n        return proyecto.token;\r\n    }\r\n\r\n    function limpiarTareas() {\r\n        const listadoTareas = document.querySelector('#listado-tareas');\r\n        while (listadoTareas.firstChild) {\r\n            listadoTareas.removeChild(listadoTareas.firstChild)\r\n        }\r\n    }\r\n})();"]}